/**
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.spoonacular.client.model;

import com.spoonacular.client.model.SearchGroceryProductsByUPC200ResponseNutrition;
import com.spoonacular.client.model.SearchGroceryProductsByUPC200ResponseServings;
import java.math.BigDecimal;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * 
 **/
@ApiModel(description = "")
public class GetMenuItemInformation200Response {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("title")
  private String title = null;
  @SerializedName("restaurantChain")
  private String restaurantChain = null;
  @SerializedName("nutrition")
  private SearchGroceryProductsByUPC200ResponseNutrition nutrition = null;
  @SerializedName("badges")
  private List<String> badges = null;
  @SerializedName("breadcrumbs")
  private List<String> breadcrumbs = null;
  @SerializedName("generatedText")
  private String generatedText = null;
  @SerializedName("imageType")
  private String imageType = null;
  @SerializedName("likes")
  private BigDecimal likes = null;
  @SerializedName("servings")
  private SearchGroceryProductsByUPC200ResponseServings servings = null;
  @SerializedName("price")
  private BigDecimal price = null;
  @SerializedName("spoonacularScore")
  private BigDecimal spoonacularScore = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getRestaurantChain() {
    return restaurantChain;
  }
  public void setRestaurantChain(String restaurantChain) {
    this.restaurantChain = restaurantChain;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public SearchGroceryProductsByUPC200ResponseNutrition getNutrition() {
    return nutrition;
  }
  public void setNutrition(SearchGroceryProductsByUPC200ResponseNutrition nutrition) {
    this.nutrition = nutrition;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getBadges() {
    return badges;
  }
  public void setBadges(List<String> badges) {
    this.badges = badges;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getBreadcrumbs() {
    return breadcrumbs;
  }
  public void setBreadcrumbs(List<String> breadcrumbs) {
    this.breadcrumbs = breadcrumbs;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getGeneratedText() {
    return generatedText;
  }
  public void setGeneratedText(String generatedText) {
    this.generatedText = generatedText;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getImageType() {
    return imageType;
  }
  public void setImageType(String imageType) {
    this.imageType = imageType;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getLikes() {
    return likes;
  }
  public void setLikes(BigDecimal likes) {
    this.likes = likes;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public SearchGroceryProductsByUPC200ResponseServings getServings() {
    return servings;
  }
  public void setServings(SearchGroceryProductsByUPC200ResponseServings servings) {
    this.servings = servings;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getSpoonacularScore() {
    return spoonacularScore;
  }
  public void setSpoonacularScore(BigDecimal spoonacularScore) {
    this.spoonacularScore = spoonacularScore;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMenuItemInformation200Response getMenuItemInformation200Response = (GetMenuItemInformation200Response) o;
    return (this.id == null ? getMenuItemInformation200Response.id == null : this.id.equals(getMenuItemInformation200Response.id)) &&
        (this.title == null ? getMenuItemInformation200Response.title == null : this.title.equals(getMenuItemInformation200Response.title)) &&
        (this.restaurantChain == null ? getMenuItemInformation200Response.restaurantChain == null : this.restaurantChain.equals(getMenuItemInformation200Response.restaurantChain)) &&
        (this.nutrition == null ? getMenuItemInformation200Response.nutrition == null : this.nutrition.equals(getMenuItemInformation200Response.nutrition)) &&
        (this.badges == null ? getMenuItemInformation200Response.badges == null : this.badges.equals(getMenuItemInformation200Response.badges)) &&
        (this.breadcrumbs == null ? getMenuItemInformation200Response.breadcrumbs == null : this.breadcrumbs.equals(getMenuItemInformation200Response.breadcrumbs)) &&
        (this.generatedText == null ? getMenuItemInformation200Response.generatedText == null : this.generatedText.equals(getMenuItemInformation200Response.generatedText)) &&
        (this.imageType == null ? getMenuItemInformation200Response.imageType == null : this.imageType.equals(getMenuItemInformation200Response.imageType)) &&
        (this.likes == null ? getMenuItemInformation200Response.likes == null : this.likes.equals(getMenuItemInformation200Response.likes)) &&
        (this.servings == null ? getMenuItemInformation200Response.servings == null : this.servings.equals(getMenuItemInformation200Response.servings)) &&
        (this.price == null ? getMenuItemInformation200Response.price == null : this.price.equals(getMenuItemInformation200Response.price)) &&
        (this.spoonacularScore == null ? getMenuItemInformation200Response.spoonacularScore == null : this.spoonacularScore.equals(getMenuItemInformation200Response.spoonacularScore));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    result = 31 * result + (this.restaurantChain == null ? 0: this.restaurantChain.hashCode());
    result = 31 * result + (this.nutrition == null ? 0: this.nutrition.hashCode());
    result = 31 * result + (this.badges == null ? 0: this.badges.hashCode());
    result = 31 * result + (this.breadcrumbs == null ? 0: this.breadcrumbs.hashCode());
    result = 31 * result + (this.generatedText == null ? 0: this.generatedText.hashCode());
    result = 31 * result + (this.imageType == null ? 0: this.imageType.hashCode());
    result = 31 * result + (this.likes == null ? 0: this.likes.hashCode());
    result = 31 * result + (this.servings == null ? 0: this.servings.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.spoonacularScore == null ? 0: this.spoonacularScore.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMenuItemInformation200Response {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  title: ").append(title).append("\n");
    sb.append("  restaurantChain: ").append(restaurantChain).append("\n");
    sb.append("  nutrition: ").append(nutrition).append("\n");
    sb.append("  badges: ").append(badges).append("\n");
    sb.append("  breadcrumbs: ").append(breadcrumbs).append("\n");
    sb.append("  generatedText: ").append(generatedText).append("\n");
    sb.append("  imageType: ").append(imageType).append("\n");
    sb.append("  likes: ").append(likes).append("\n");
    sb.append("  servings: ").append(servings).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  spoonacularScore: ").append(spoonacularScore).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
