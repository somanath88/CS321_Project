/**
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.spoonacular.client.model;

import com.spoonacular.client.model.GetRecipeInformation200ResponseExtendedIngredientsInner;
import com.spoonacular.client.model.GetRecipeInformation200ResponseWinePairing;
import java.math.BigDecimal;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * 
 **/
@ApiModel(description = "")
public class GetRecipeInformation200Response {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("title")
  private String title = null;
  @SerializedName("image")
  private String image = null;
  @SerializedName("imageType")
  private String imageType = null;
  @SerializedName("servings")
  private BigDecimal servings = null;
  @SerializedName("readyInMinutes")
  private Integer readyInMinutes = null;
  @SerializedName("license")
  private String license = null;
  @SerializedName("sourceName")
  private String sourceName = null;
  @SerializedName("sourceUrl")
  private String sourceUrl = null;
  @SerializedName("spoonacularSourceUrl")
  private String spoonacularSourceUrl = null;
  @SerializedName("aggregateLikes")
  private Integer aggregateLikes = null;
  @SerializedName("healthScore")
  private BigDecimal healthScore = null;
  @SerializedName("spoonacularScore")
  private BigDecimal spoonacularScore = null;
  @SerializedName("pricePerServing")
  private BigDecimal pricePerServing = null;
  @SerializedName("analyzedInstructions")
  private List<Object> analyzedInstructions = null;
  @SerializedName("cheap")
  private Boolean cheap = null;
  @SerializedName("creditsText")
  private String creditsText = null;
  @SerializedName("cuisines")
  private List<String> cuisines = null;
  @SerializedName("dairyFree")
  private Boolean dairyFree = null;
  @SerializedName("diets")
  private List<String> diets = null;
  @SerializedName("gaps")
  private String gaps = null;
  @SerializedName("glutenFree")
  private Boolean glutenFree = null;
  @SerializedName("instructions")
  private String instructions = null;
  @SerializedName("ketogenic")
  private Boolean ketogenic = null;
  @SerializedName("lowFodmap")
  private Boolean lowFodmap = null;
  @SerializedName("occasions")
  private List<String> occasions = null;
  @SerializedName("sustainable")
  private Boolean sustainable = null;
  @SerializedName("vegan")
  private Boolean vegan = null;
  @SerializedName("vegetarian")
  private Boolean vegetarian = null;
  @SerializedName("veryHealthy")
  private Boolean veryHealthy = null;
  @SerializedName("veryPopular")
  private Boolean veryPopular = null;
  @SerializedName("whole30")
  private Boolean whole30 = null;
  @SerializedName("weightWatcherSmartPoints")
  private BigDecimal weightWatcherSmartPoints = null;
  @SerializedName("dishTypes")
  private List<String> dishTypes = null;
  @SerializedName("extendedIngredients")
  private Set<GetRecipeInformation200ResponseExtendedIngredientsInner> extendedIngredients = null;
  @SerializedName("summary")
  private String summary = null;
  @SerializedName("winePairing")
  private GetRecipeInformation200ResponseWinePairing winePairing = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getImage() {
    return image;
  }
  public void setImage(String image) {
    this.image = image;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getImageType() {
    return imageType;
  }
  public void setImageType(String imageType) {
    this.imageType = imageType;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getServings() {
    return servings;
  }
  public void setServings(BigDecimal servings) {
    this.servings = servings;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getReadyInMinutes() {
    return readyInMinutes;
  }
  public void setReadyInMinutes(Integer readyInMinutes) {
    this.readyInMinutes = readyInMinutes;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getLicense() {
    return license;
  }
  public void setLicense(String license) {
    this.license = license;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getSourceName() {
    return sourceName;
  }
  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getSourceUrl() {
    return sourceUrl;
  }
  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getSpoonacularSourceUrl() {
    return spoonacularSourceUrl;
  }
  public void setSpoonacularSourceUrl(String spoonacularSourceUrl) {
    this.spoonacularSourceUrl = spoonacularSourceUrl;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getAggregateLikes() {
    return aggregateLikes;
  }
  public void setAggregateLikes(Integer aggregateLikes) {
    this.aggregateLikes = aggregateLikes;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getHealthScore() {
    return healthScore;
  }
  public void setHealthScore(BigDecimal healthScore) {
    this.healthScore = healthScore;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getSpoonacularScore() {
    return spoonacularScore;
  }
  public void setSpoonacularScore(BigDecimal spoonacularScore) {
    this.spoonacularScore = spoonacularScore;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getPricePerServing() {
    return pricePerServing;
  }
  public void setPricePerServing(BigDecimal pricePerServing) {
    this.pricePerServing = pricePerServing;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<Object> getAnalyzedInstructions() {
    return analyzedInstructions;
  }
  public void setAnalyzedInstructions(List<Object> analyzedInstructions) {
    this.analyzedInstructions = analyzedInstructions;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getCheap() {
    return cheap;
  }
  public void setCheap(Boolean cheap) {
    this.cheap = cheap;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getCreditsText() {
    return creditsText;
  }
  public void setCreditsText(String creditsText) {
    this.creditsText = creditsText;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getCuisines() {
    return cuisines;
  }
  public void setCuisines(List<String> cuisines) {
    this.cuisines = cuisines;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getDairyFree() {
    return dairyFree;
  }
  public void setDairyFree(Boolean dairyFree) {
    this.dairyFree = dairyFree;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getDiets() {
    return diets;
  }
  public void setDiets(List<String> diets) {
    this.diets = diets;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getGaps() {
    return gaps;
  }
  public void setGaps(String gaps) {
    this.gaps = gaps;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getGlutenFree() {
    return glutenFree;
  }
  public void setGlutenFree(Boolean glutenFree) {
    this.glutenFree = glutenFree;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getInstructions() {
    return instructions;
  }
  public void setInstructions(String instructions) {
    this.instructions = instructions;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getKetogenic() {
    return ketogenic;
  }
  public void setKetogenic(Boolean ketogenic) {
    this.ketogenic = ketogenic;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getLowFodmap() {
    return lowFodmap;
  }
  public void setLowFodmap(Boolean lowFodmap) {
    this.lowFodmap = lowFodmap;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getOccasions() {
    return occasions;
  }
  public void setOccasions(List<String> occasions) {
    this.occasions = occasions;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getSustainable() {
    return sustainable;
  }
  public void setSustainable(Boolean sustainable) {
    this.sustainable = sustainable;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getVegan() {
    return vegan;
  }
  public void setVegan(Boolean vegan) {
    this.vegan = vegan;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getVegetarian() {
    return vegetarian;
  }
  public void setVegetarian(Boolean vegetarian) {
    this.vegetarian = vegetarian;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getVeryHealthy() {
    return veryHealthy;
  }
  public void setVeryHealthy(Boolean veryHealthy) {
    this.veryHealthy = veryHealthy;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getVeryPopular() {
    return veryPopular;
  }
  public void setVeryPopular(Boolean veryPopular) {
    this.veryPopular = veryPopular;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getWhole30() {
    return whole30;
  }
  public void setWhole30(Boolean whole30) {
    this.whole30 = whole30;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getWeightWatcherSmartPoints() {
    return weightWatcherSmartPoints;
  }
  public void setWeightWatcherSmartPoints(BigDecimal weightWatcherSmartPoints) {
    this.weightWatcherSmartPoints = weightWatcherSmartPoints;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getDishTypes() {
    return dishTypes;
  }
  public void setDishTypes(List<String> dishTypes) {
    this.dishTypes = dishTypes;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Set<GetRecipeInformation200ResponseExtendedIngredientsInner> getExtendedIngredients() {
    return extendedIngredients;
  }
  public void setExtendedIngredients(Set<GetRecipeInformation200ResponseExtendedIngredientsInner> extendedIngredients) {
    this.extendedIngredients = extendedIngredients;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getSummary() {
    return summary;
  }
  public void setSummary(String summary) {
    this.summary = summary;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public GetRecipeInformation200ResponseWinePairing getWinePairing() {
    return winePairing;
  }
  public void setWinePairing(GetRecipeInformation200ResponseWinePairing winePairing) {
    this.winePairing = winePairing;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetRecipeInformation200Response getRecipeInformation200Response = (GetRecipeInformation200Response) o;
    return (this.id == null ? getRecipeInformation200Response.id == null : this.id.equals(getRecipeInformation200Response.id)) &&
        (this.title == null ? getRecipeInformation200Response.title == null : this.title.equals(getRecipeInformation200Response.title)) &&
        (this.image == null ? getRecipeInformation200Response.image == null : this.image.equals(getRecipeInformation200Response.image)) &&
        (this.imageType == null ? getRecipeInformation200Response.imageType == null : this.imageType.equals(getRecipeInformation200Response.imageType)) &&
        (this.servings == null ? getRecipeInformation200Response.servings == null : this.servings.equals(getRecipeInformation200Response.servings)) &&
        (this.readyInMinutes == null ? getRecipeInformation200Response.readyInMinutes == null : this.readyInMinutes.equals(getRecipeInformation200Response.readyInMinutes)) &&
        (this.license == null ? getRecipeInformation200Response.license == null : this.license.equals(getRecipeInformation200Response.license)) &&
        (this.sourceName == null ? getRecipeInformation200Response.sourceName == null : this.sourceName.equals(getRecipeInformation200Response.sourceName)) &&
        (this.sourceUrl == null ? getRecipeInformation200Response.sourceUrl == null : this.sourceUrl.equals(getRecipeInformation200Response.sourceUrl)) &&
        (this.spoonacularSourceUrl == null ? getRecipeInformation200Response.spoonacularSourceUrl == null : this.spoonacularSourceUrl.equals(getRecipeInformation200Response.spoonacularSourceUrl)) &&
        (this.aggregateLikes == null ? getRecipeInformation200Response.aggregateLikes == null : this.aggregateLikes.equals(getRecipeInformation200Response.aggregateLikes)) &&
        (this.healthScore == null ? getRecipeInformation200Response.healthScore == null : this.healthScore.equals(getRecipeInformation200Response.healthScore)) &&
        (this.spoonacularScore == null ? getRecipeInformation200Response.spoonacularScore == null : this.spoonacularScore.equals(getRecipeInformation200Response.spoonacularScore)) &&
        (this.pricePerServing == null ? getRecipeInformation200Response.pricePerServing == null : this.pricePerServing.equals(getRecipeInformation200Response.pricePerServing)) &&
        (this.analyzedInstructions == null ? getRecipeInformation200Response.analyzedInstructions == null : this.analyzedInstructions.equals(getRecipeInformation200Response.analyzedInstructions)) &&
        (this.cheap == null ? getRecipeInformation200Response.cheap == null : this.cheap.equals(getRecipeInformation200Response.cheap)) &&
        (this.creditsText == null ? getRecipeInformation200Response.creditsText == null : this.creditsText.equals(getRecipeInformation200Response.creditsText)) &&
        (this.cuisines == null ? getRecipeInformation200Response.cuisines == null : this.cuisines.equals(getRecipeInformation200Response.cuisines)) &&
        (this.dairyFree == null ? getRecipeInformation200Response.dairyFree == null : this.dairyFree.equals(getRecipeInformation200Response.dairyFree)) &&
        (this.diets == null ? getRecipeInformation200Response.diets == null : this.diets.equals(getRecipeInformation200Response.diets)) &&
        (this.gaps == null ? getRecipeInformation200Response.gaps == null : this.gaps.equals(getRecipeInformation200Response.gaps)) &&
        (this.glutenFree == null ? getRecipeInformation200Response.glutenFree == null : this.glutenFree.equals(getRecipeInformation200Response.glutenFree)) &&
        (this.instructions == null ? getRecipeInformation200Response.instructions == null : this.instructions.equals(getRecipeInformation200Response.instructions)) &&
        (this.ketogenic == null ? getRecipeInformation200Response.ketogenic == null : this.ketogenic.equals(getRecipeInformation200Response.ketogenic)) &&
        (this.lowFodmap == null ? getRecipeInformation200Response.lowFodmap == null : this.lowFodmap.equals(getRecipeInformation200Response.lowFodmap)) &&
        (this.occasions == null ? getRecipeInformation200Response.occasions == null : this.occasions.equals(getRecipeInformation200Response.occasions)) &&
        (this.sustainable == null ? getRecipeInformation200Response.sustainable == null : this.sustainable.equals(getRecipeInformation200Response.sustainable)) &&
        (this.vegan == null ? getRecipeInformation200Response.vegan == null : this.vegan.equals(getRecipeInformation200Response.vegan)) &&
        (this.vegetarian == null ? getRecipeInformation200Response.vegetarian == null : this.vegetarian.equals(getRecipeInformation200Response.vegetarian)) &&
        (this.veryHealthy == null ? getRecipeInformation200Response.veryHealthy == null : this.veryHealthy.equals(getRecipeInformation200Response.veryHealthy)) &&
        (this.veryPopular == null ? getRecipeInformation200Response.veryPopular == null : this.veryPopular.equals(getRecipeInformation200Response.veryPopular)) &&
        (this.whole30 == null ? getRecipeInformation200Response.whole30 == null : this.whole30.equals(getRecipeInformation200Response.whole30)) &&
        (this.weightWatcherSmartPoints == null ? getRecipeInformation200Response.weightWatcherSmartPoints == null : this.weightWatcherSmartPoints.equals(getRecipeInformation200Response.weightWatcherSmartPoints)) &&
        (this.dishTypes == null ? getRecipeInformation200Response.dishTypes == null : this.dishTypes.equals(getRecipeInformation200Response.dishTypes)) &&
        (this.extendedIngredients == null ? getRecipeInformation200Response.extendedIngredients == null : this.extendedIngredients.equals(getRecipeInformation200Response.extendedIngredients)) &&
        (this.summary == null ? getRecipeInformation200Response.summary == null : this.summary.equals(getRecipeInformation200Response.summary)) &&
        (this.winePairing == null ? getRecipeInformation200Response.winePairing == null : this.winePairing.equals(getRecipeInformation200Response.winePairing));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    result = 31 * result + (this.image == null ? 0: this.image.hashCode());
    result = 31 * result + (this.imageType == null ? 0: this.imageType.hashCode());
    result = 31 * result + (this.servings == null ? 0: this.servings.hashCode());
    result = 31 * result + (this.readyInMinutes == null ? 0: this.readyInMinutes.hashCode());
    result = 31 * result + (this.license == null ? 0: this.license.hashCode());
    result = 31 * result + (this.sourceName == null ? 0: this.sourceName.hashCode());
    result = 31 * result + (this.sourceUrl == null ? 0: this.sourceUrl.hashCode());
    result = 31 * result + (this.spoonacularSourceUrl == null ? 0: this.spoonacularSourceUrl.hashCode());
    result = 31 * result + (this.aggregateLikes == null ? 0: this.aggregateLikes.hashCode());
    result = 31 * result + (this.healthScore == null ? 0: this.healthScore.hashCode());
    result = 31 * result + (this.spoonacularScore == null ? 0: this.spoonacularScore.hashCode());
    result = 31 * result + (this.pricePerServing == null ? 0: this.pricePerServing.hashCode());
    result = 31 * result + (this.analyzedInstructions == null ? 0: this.analyzedInstructions.hashCode());
    result = 31 * result + (this.cheap == null ? 0: this.cheap.hashCode());
    result = 31 * result + (this.creditsText == null ? 0: this.creditsText.hashCode());
    result = 31 * result + (this.cuisines == null ? 0: this.cuisines.hashCode());
    result = 31 * result + (this.dairyFree == null ? 0: this.dairyFree.hashCode());
    result = 31 * result + (this.diets == null ? 0: this.diets.hashCode());
    result = 31 * result + (this.gaps == null ? 0: this.gaps.hashCode());
    result = 31 * result + (this.glutenFree == null ? 0: this.glutenFree.hashCode());
    result = 31 * result + (this.instructions == null ? 0: this.instructions.hashCode());
    result = 31 * result + (this.ketogenic == null ? 0: this.ketogenic.hashCode());
    result = 31 * result + (this.lowFodmap == null ? 0: this.lowFodmap.hashCode());
    result = 31 * result + (this.occasions == null ? 0: this.occasions.hashCode());
    result = 31 * result + (this.sustainable == null ? 0: this.sustainable.hashCode());
    result = 31 * result + (this.vegan == null ? 0: this.vegan.hashCode());
    result = 31 * result + (this.vegetarian == null ? 0: this.vegetarian.hashCode());
    result = 31 * result + (this.veryHealthy == null ? 0: this.veryHealthy.hashCode());
    result = 31 * result + (this.veryPopular == null ? 0: this.veryPopular.hashCode());
    result = 31 * result + (this.whole30 == null ? 0: this.whole30.hashCode());
    result = 31 * result + (this.weightWatcherSmartPoints == null ? 0: this.weightWatcherSmartPoints.hashCode());
    result = 31 * result + (this.dishTypes == null ? 0: this.dishTypes.hashCode());
    result = 31 * result + (this.extendedIngredients == null ? 0: this.extendedIngredients.hashCode());
    result = 31 * result + (this.summary == null ? 0: this.summary.hashCode());
    result = 31 * result + (this.winePairing == null ? 0: this.winePairing.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetRecipeInformation200Response {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  title: ").append(title).append("\n");
    sb.append("  image: ").append(image).append("\n");
    sb.append("  imageType: ").append(imageType).append("\n");
    sb.append("  servings: ").append(servings).append("\n");
    sb.append("  readyInMinutes: ").append(readyInMinutes).append("\n");
    sb.append("  license: ").append(license).append("\n");
    sb.append("  sourceName: ").append(sourceName).append("\n");
    sb.append("  sourceUrl: ").append(sourceUrl).append("\n");
    sb.append("  spoonacularSourceUrl: ").append(spoonacularSourceUrl).append("\n");
    sb.append("  aggregateLikes: ").append(aggregateLikes).append("\n");
    sb.append("  healthScore: ").append(healthScore).append("\n");
    sb.append("  spoonacularScore: ").append(spoonacularScore).append("\n");
    sb.append("  pricePerServing: ").append(pricePerServing).append("\n");
    sb.append("  analyzedInstructions: ").append(analyzedInstructions).append("\n");
    sb.append("  cheap: ").append(cheap).append("\n");
    sb.append("  creditsText: ").append(creditsText).append("\n");
    sb.append("  cuisines: ").append(cuisines).append("\n");
    sb.append("  dairyFree: ").append(dairyFree).append("\n");
    sb.append("  diets: ").append(diets).append("\n");
    sb.append("  gaps: ").append(gaps).append("\n");
    sb.append("  glutenFree: ").append(glutenFree).append("\n");
    sb.append("  instructions: ").append(instructions).append("\n");
    sb.append("  ketogenic: ").append(ketogenic).append("\n");
    sb.append("  lowFodmap: ").append(lowFodmap).append("\n");
    sb.append("  occasions: ").append(occasions).append("\n");
    sb.append("  sustainable: ").append(sustainable).append("\n");
    sb.append("  vegan: ").append(vegan).append("\n");
    sb.append("  vegetarian: ").append(vegetarian).append("\n");
    sb.append("  veryHealthy: ").append(veryHealthy).append("\n");
    sb.append("  veryPopular: ").append(veryPopular).append("\n");
    sb.append("  whole30: ").append(whole30).append("\n");
    sb.append("  weightWatcherSmartPoints: ").append(weightWatcherSmartPoints).append("\n");
    sb.append("  dishTypes: ").append(dishTypes).append("\n");
    sb.append("  extendedIngredients: ").append(extendedIngredients).append("\n");
    sb.append("  summary: ").append(summary).append("\n");
    sb.append("  winePairing: ").append(winePairing).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
